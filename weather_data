import pandas as pd
import re

file_path = "/Users/saurabhkumar/Desktop/armaghdata.txt"
output_csv = "/Users/saurabhkumar/Desktop/armaghdata.csv"

clean_rows = []

with open(file_path, "r") as f:
    for line in f:
        # Keep only lines that start with a year

        if re.match(r"^\s*\d{4}", line):  # starts with year
            line = line.strip()
            parts = re.split(r'\s+', line)

            if len(parts) >= 7:
                # Optional: REMOVE footnotes like * or # or trailing text
                # -----------------------------------------
                #Uncomment the following block to clean footnotes:
                for i in range(2, 7):  # only clean columns tmax to sun
                    parts[i] = re.sub(r"[#*]", "", parts[i])
                if len(parts) > 7:  # If extra notes like "Provisional" exist
                    parts = parts[:7]
                # -----------------------------------------

                clean_rows.append(parts[:7])

df = pd.DataFrame(clean_rows, columns=["year", "month", "tmax", "tmin", "af", "rain", "sun"])
df.to_csv(output_csv, index=False)

print(f"âœ… CSV saved to: {output_csv}")


library(readr)
library(dplyr)

# Custom rounding function: round to nearest multiple of 5
round_to_5 <- function(x) {
  round(x / 5) * 5
}

# Load data
data <- read_csv("your_input_file.csv")  # Replace with actual path

# Step 1: Round monthly values BEFORE aggregation
data <- data %>%
  mutate(across(where(is.numeric), round_to_5))

# Step 2: Replace blank or NA soc_4_digit_code with "Unknown"
data <- data %>%
  mutate(soc_4_digit_code = ifelse(is.na(soc_4_digit_code) | soc_4_digit_code == "", "Unknown", as.character(soc_4_digit_code)))

# Step 3: Aggregate at UK level
uk_summary <- data %>%
  select(-region_label) %>%
  group_by(soc_4_digit_code, soc_4_digit_label) %>%
  summarise(across(where(is.numeric), sum, na.rm = TRUE), .groups = "drop")

# Step 4: Add "Country" column and reorder
uk_summary <- uk_summary %>%
  mutate(Country = "Total UK") %>%
  select(Country, everything())

# View result
print(head(uk_summary))

# Optional: write to CSV
# write_csv(uk_summary, "UK_aggregated_rounded_first.csv")
# Optionally write to CSV
# write_csv(uk_summary, "UK_aggregated_rounded.csv")


=IF(Sheet1!A1<>Sheet2!A1, Sheet2!A1, Sheet1!A1)
