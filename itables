import pandas as pd
import itables.options as opt
from itables import show

# Generate a large dummy dataset (replace with your real 54k-row DataFrame)
df = pd.DataFrame({
    "Col_A": range(1, 1001),
    "Col_B": ['X']*500 + ['Y']*500,
    "Col_C": ['Foo', 'Bar', 'Baz', 'Qux']*250
})

# 1) Configure DataTables/itables options
opt.dom = "Bfrtip"              # B=Buttons, f=Filter, r=Process info, t=Table, i=Info, p=Pagination
opt.serverSide = False          # Ensure we're doing CLIENT-side search
opt.paging = True               # Show pages
opt.pageLength = 10             # 10 rows per page (can be changed)
opt.searching = True            # Enable search
opt.lengthMenu = [10, 25, 50, -1]

# 2) Configure the export buttons
opt.buttons = [
    {
        "extend": "copyHtml5",
        "text": "Copy (All Pages)",
        "exportOptions": {
            "columns": ":visible",
            # "page": "all" by itself is an older shorthand. 
            # Proper usage is with `modifier`:
            "modifier": {"page": "all"},  
            "format": {
                "header": "function ( data, columnIdx ) { return data; }"
            }
        }
    },
    {
        "extend": "csvHtml5",
        "text": "CSV (All Pages)",
        "exportOptions": {
            "columns": ":visible",
            "modifier": {"page": "all"},
            "format": {
                "header": "function ( data, columnIdx ) { return data; }"
            }
        }
    },
    {
        "extend": "excelHtml5",
        "text": "Excel (All Pages)",
        "exportOptions": {
            "columns": ":visible",
            "modifier": {"page": "all"},
            "format": {
                "header": "function ( data, columnIdx ) { return data; }"
            }
        }
    },
    {
        "extend": "pdfHtml5",
        "text": "PDF (All Pages)",
        "exportOptions": {
            "columns": ":visible",
            "modifier": {"page": "all"},
            "format": {
                "header": "function ( data, columnIdx ) { return data; }"
            }
        }
    },
    "print"
]

# 3) Display the DataFrame as an interactive table
show(
    df,
    column_filters="header",  # optional: add a search box atop each column
    scrollX=True,             # horizontal scroll if needed
)
