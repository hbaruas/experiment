@echo on

REM ----------------------------------------------
REM 1) Check arguments: 
REM    e.g. create_env.bat 3_8 or 3_10 or 3_12
REM ----------------------------------------------
if "%~1"=="" (
    echo Usage: %~nx0 {3_8|3_10|3_12}
    exit /b 1
)

set "PY_VERSION=%~1"
set "PYTHON_ROOT=C:\ONSapps\My_python"
set "ENV_NAME=ERIC"

REM ----------------------------------------------
REM 2) Set the chosen Python.exe path
REM ----------------------------------------------
set "PYTHON_EXE=%PYTHON_ROOT%\Python_%PY_VERSION%\python.exe"
set "ENV_DIR=%PYTHON_ROOT%\Python_%PY_VERSION%\venv\%ENV_NAME%"

echo [DEBUG] PYTHON_EXE=%PYTHON_EXE%
echo [DEBUG] ENV_DIR  =%ENV_DIR%

REM ----------------------------------------------
REM 3) Create environment if missing
REM ----------------------------------------------
if not exist "%ENV_DIR%\Scripts\activate.bat" (
    echo [DEBUG] Creating environment in "%ENV_DIR%"
    "%PYTHON_EXE%" -m venv "%ENV_DIR%"
    if errorlevel 1 (
        echo [ERROR] Failed to create virtual environment!
        exit /b 1
    )
) else (
    echo [DEBUG] Found existing environment in "%ENV_DIR%". Skipping creation.
)

REM ----------------------------------------------
REM 4) Activate the environment
REM ----------------------------------------------
call "%ENV_DIR%\Scripts\activate.bat"

REM ----------------------------------------------
REM 5) Libraries to check (space-separated)
REM ----------------------------------------------
set "LIBS=requests pandas jupyter"

for %%L in (%LIBS%) do (
    pip show %%L >nul 2>&1
    if errorlevel 1 (
        echo [DEBUG] Installing %%L...
        pip install %%L
        if errorlevel 1 (
            echo [ERROR] Failed to install %%L
            exit /b 1
        )
    ) else (
        echo [DEBUG] %%L already installed
    )
)

REM ----------------------------------------------
REM 6) Launch the notebook
REM    Assume it's in the same folder as this .bat
REM ----------------------------------------------
jupyter notebook "%~dp0abc.ipynb"
