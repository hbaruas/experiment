@echo on

REM -------------------------------------------------
REM 0) Check for command-line argument: 3_8, 3_10, 3_12, etc.
REM -------------------------------------------------
if "%~1"=="" (
    echo [ERROR] You did not specify which Python version to use.
    echo [INFO]  Usage: %~nx0 {3_8|3_10|3_12}
    pause
    goto end
)

set "PY_VERSION=%~1"

REM -------------------------------------------------
REM 1) Define the base Python folder and environment name
REM    (Adjust this root path as needed!)
REM -------------------------------------------------
set "PYTHON_ROOT=C:\ONSapps\My_python"
set "ENV_NAME=ERIC"

REM Build full paths
set "PYTHON_EXE=%PYTHON_ROOT%\Python_%PY_VERSION%\python.exe"
set "ENV_DIR=%PYTHON_ROOT%\Python_%PY_VERSION%\venv\%ENV_NAME%"

echo [DEBUG] Using Python version: %PY_VERSION%
echo [DEBUG] PYTHON_EXE=%PYTHON_EXE%
echo [DEBUG] ENV_DIR  =%ENV_DIR%
pause

REM -------------------------------------------------
REM 2) Create virtual environment if missing
REM -------------------------------------------------
if not exist "%ENV_DIR%\Scripts\activate.bat" (
    echo [DEBUG] Environment does not exist. Creating it...
    "%PYTHON_EXE%" -m venv "%ENV_DIR%"
    if errorlevel 1 (
        echo [ERROR] Failed to create virtual environment!
        pause
        goto end
    )
) else (
    echo [DEBUG] Found existing environment at %ENV_DIR%. Skipping creation...
)
pause

REM -------------------------------------------------
REM 3) Activate the environment
REM -------------------------------------------------
echo [DEBUG] Activating the environment...
call "%ENV_DIR%\Scripts\activate.bat"

echo [DEBUG] Let's confirm which Python is now active:
where python
python --version
pause

REM -------------------------------------------------
REM 4) Check/install libraries if missing
REM    (Adjust or add libraries as needed.)
REM -------------------------------------------------
set "LIBS=requests pandas jupyter"

for %%L in (%LIBS%) do (
    echo [DEBUG] Checking if %%L is installed...
    pip show %%L >nul 2>&1
    if errorlevel 1 (
        echo [DEBUG] Installing %%L...
        pip install %%L
        if errorlevel 1 (
            echo [ERROR] Failed to install %%L
            pause
            goto end
        )
    ) else (
        echo [DEBUG] %%L is already installed, skipping...
    )
)

echo [DEBUG] All libraries are confirmed or installed.
pause

REM -------------------------------------------------
REM 5) Launch Jupyter Notebook (abc.ipynb)
REM    Assuming abc.ipynb is in the same folder as this script
REM    (%~dp0 => directory of this .bat file)
REM -------------------------------------------------
echo [DEBUG] Launching Jupyter Notebook: "%~dp0abc.ipynb"
jupyter notebook "%~dp0abc.ipynb"

REM -------------------------------------------------
REM 6) Final section. We'll use "cmd /k" so the window
REM    remains open after the script ends.
REM -------------------------------------------------
:end
echo [DEBUG] Script completed. Keeping window open...
cmd /k
