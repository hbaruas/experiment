import requests
import pandas as pd
from tqdm import tqdm
import time
import urllib3

# Suppress SSL warnings
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# ✅ REPLACE THIS with your actual Reed API key
API_KEY = 'YOUR_API_KEY_HERE'

# Constants
BASE_URL = 'https://www.reed.co.uk/api/1.0/search'
TARGET_JOBS = 5000
PAGE_SIZE = 25

# Storage
all_jobs = []
page = 1

# Progress bar setup
progress = tqdm(total=TARGET_JOBS, desc='Fetching Jobs', ncols=100)

while len(all_jobs) < TARGET_JOBS:
    params = {
        'resultsToTake': PAGE_SIZE,
        'resultsToSkip': (page - 1) * PAGE_SIZE
    }

    try:
        response = requests.get(
            BASE_URL,
            headers={'Accept': 'application/json'},
            auth=(API_KEY, ''),
            params=params,
            verify=False  # SSL cert verification OFF
        )
    except Exception as e:
        print(f"❌ Request failed: {e}")
        break

    if response.status_code != 200:
        print(f"❌ Error {response.status_code}: {response.text}")
        break

    jobs = response.json().get('results', [])
    if not jobs:
        print("⚠️ No more jobs returned by the API.")
        break

    for job in jobs:
        job_id = job.get('jobId')
        title = job.get('jobTitle')
        description = job.get('jobDescription')

        if job_id and title and description:
            all_jobs.append({
                'job_id': job_id,
                'title': title,
                'description': description,
                'location': job.get('locationName'),
                'employer': job.get('employerName'),
                'salary_min': job.get('minimumSalary'),
                'salary_max': job.get('maximumSalary'),
                'currency': job.get('currency'),
                'date_posted': job.get('datePosted'),
                'url': job.get('jobUrl')
            })
            progress.update(1)
            if len(all_jobs) >= TARGET_JOBS:
                break

    page += 1
    time.sleep(0.5)  # Be kind to the server

progress.close()

# Save to CSV
df = pd.DataFrame(all_jobs)
df.to_csv('reed_jobs_uk_extended.csv', index=False)
print(f"\n✅ Finished! {len(df)} jobs saved to 'reed_jobs_uk_extended.csv'")
